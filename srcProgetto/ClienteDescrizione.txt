Client

Inizialmente inizializza le variabili addr(indirizzo DiscoveryServer), port(porta DiscoveryServer) e nomeFile(nome del file su cui eseguire lo swap) con le informazioni estrapolate dagli argomenti.
	
nomeFile = args[2];
addr = InetAddress.getByName(args[0]);
port = Integer.parseInt(args[1]);

che poi verranno utilizzati per creare il packetto da inviare a DiscoveryServer.

Definizione di socket e packet

	
socket = new DatagramSocket();
packet = new DatagramPacket(buf, buf.length, addr, port);
Creazione dati per packet ( conversione da stringa ad array di byte)

boStream = new ByteArrayOutputStream();
doStream = new DataOutputStream(boStream);
doStream.writeUTF(nomeFile);
data = boStream.toByteArray();

Inserimento dati nel packetto e invio a DiscoveryServer

packet.setData(data);
socket.send(packet);

Liberazione buffer e attesa invio packetto contente la porta del Rsserver da Discovery.

packet.setData(buf); 
socket.receive(packet);
Conversione dati ricevuti da array di byte a intero (porta) e cambio porta su packet

biStream = new ByteArrayInputStream(packet.getData(), 0, packet.getLength());
diStream = new DataInputStream(biStream);
portaRS = Integer.parseInt(diStream.readUTF());
packet.setPort(portaRS);
Dopo aver letto le righe che si vuole scambiare da standardInput, conversione da stringa ad Array di byte e invio.
doStream1.writeUTF(lineeSwap);
packet.setData(linee);
socket.send(packet);

Infine ricezione di risposta da RS con esito dello scambio righe.

Per tutte le varie eccezioni sono stati inseriti dei blocchi try catch 
1. UnknownHostException (2)
2. NumberFormatException (3)
3. SocketException (4)
4. IO Exception (5)
		
